- hosts: 192.168.246.107
  vars_files:
  - variable.yml
   
  tasks:

  - name: "create mount point directory for cdrom"
    file:
      state: directory
      path: "{{ dvd_dir }}"

  - mount: 
      src: "/dev/cdrom"
      path: "{{ dvd_dir }}"
      state: mounted
      fstype: "iso9660"

  - yum_repository:
       baseurl: "{{ item.baseurl }}"
       name: "{{ item.name }}"
       description: "{{ item.description }}"
       state: present
       gpgcheck: no
    loop:
      - { baseurl: "{{ dvd_dir }}/AppStream", name: 'mydvd1', description: 'myyum dvd1 for package'}
      - { baseurl: "{{ dvd_dir }}/BaseOS", name: 'mydvd2', description: 'myyum dvd2 for package'}
      - { baseurl: "https://download.docker.com/linux/centos/7/x86_64/stable/", name: "docker1", description: "docker repository" }

  - name: "install python and php"
    package:
          name: "{{ item }}"
          state: present
    loop:
    - "python3"
    - "php"

  - name: "docker installation"
    shell: "yum install docker-ce --nobest -y"
    changed_when: false
  
  - service:
      name: "docker"
      state: started
      enabled: yes 

  - pip:
      name: "docker-py"
  
  - name: selinux permissive
    ansible.posix.selinux:
                   policy: targeted
                   state: permissive

  - name: firewall disable
    service:
        name: "firewalld"
        state: stopped

  - docker_image:
      name: "{{ image }}"
      source: pull
      state: present

  - file:
       path: "/webdata"
       state: directory
       mode: '0755'

  - copy:
      content: "Task 14.2 Is completed sucessfully"
      dest: "/webdata/page.html"

  - docker_container:
      name: "{{ container_name }}"
      image: "{{ image }}"
      exposed_ports: 
      - "80"
      - "22"
      ports: 
      - "{{ http_port }}:80"
      - "{{ ssh_port }}:22"
      interactive: yes
      tty: yes
      state: started
      restart: yes
      volumes: "/webdata:/var/www/html/"

- hosts: localhost
  vars_files:
  - variable.yml
  vars:
     ip: "{{ hostvars['192.168.246.107']['ansible_facts']['docker_container']['NetworkSettings']['IPAddress']}}"
  tasks:

  - debug:
       msg: "{{ ip }}"

  - name: updated inventory
    blockinfile: 
          path: "/etc/ansible/haproxy.txt"
          block: |
                  [docker]
                  {{ ip }} ansible_host=192.168.246.107 ansible_user=root ansible_ssh_pass=redhat ansible_connection=ssh ansible_port={{ ssh_port }}

  - name: "Refresh inventory to ensure new instance exist in inventory"
    meta: refresh_inventory
      

- hosts: docker
  tasks:
          
  - name: httpd installation
    package:
        name: "httpd"
        state: present

  - package:
        name: "{{ item }}"
        state: present
    loop:  
       - "php"
       - "net-tools"


  - name: start httpd services in docker 
    command: "/usr/sbin/httpd"

 
